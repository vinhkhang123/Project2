//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace sqlForm.localhost {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="planningSoap", Namespace="https://localhost:44386/sqlWS.asmx/")]
    public partial class planning : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ReadMasterDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateMDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMDOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMDOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReaddUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatedUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadMaster_processOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateMPOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMPOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMPOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportExcelToSqlOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportSqlToExcelOperationCompleted;
        
        private System.Threading.SendOrPostCallback project3OperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public planning() {
            this.Url = global::sqlForm.Properties.Settings.Default.sqlForm_localhost_planning;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ReadMasterDataCompletedEventHandler ReadMasterDataCompleted;
        
        /// <remarks/>
        public event CreateMDCompletedEventHandler CreateMDCompleted;
        
        /// <remarks/>
        public event UpdateMDCompletedEventHandler UpdateMDCompleted;
        
        /// <remarks/>
        public event DeleteMDCompletedEventHandler DeleteMDCompleted;
        
        /// <remarks/>
        public event ReaddUsersCompletedEventHandler ReaddUsersCompleted;
        
        /// <remarks/>
        public event CreateUsersCompletedEventHandler CreateUsersCompleted;
        
        /// <remarks/>
        public event UpdatedUserCompletedEventHandler UpdatedUserCompleted;
        
        /// <remarks/>
        public event DeleteUsersCompletedEventHandler DeleteUsersCompleted;
        
        /// <remarks/>
        public event ReadMaster_processCompletedEventHandler ReadMaster_processCompleted;
        
        /// <remarks/>
        public event CreateMPCompletedEventHandler CreateMPCompleted;
        
        /// <remarks/>
        public event UpdateMPCompletedEventHandler UpdateMPCompleted;
        
        /// <remarks/>
        public event DeleteMPCompletedEventHandler DeleteMPCompleted;
        
        /// <remarks/>
        public event ReadAccountCompletedEventHandler ReadAccountCompleted;
        
        /// <remarks/>
        public event CreateAccountCompletedEventHandler CreateAccountCompleted;
        
        /// <remarks/>
        public event UpdateAccountCompletedEventHandler UpdateAccountCompleted;
        
        /// <remarks/>
        public event DeleteAccountCompletedEventHandler DeleteAccountCompleted;
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event ImportExcelToSqlCompletedEventHandler ImportExcelToSqlCompleted;
        
        /// <remarks/>
        public event ExportSqlToExcelCompletedEventHandler ExportSqlToExcelCompleted;
        
        /// <remarks/>
        public event project3CompletedEventHandler project3Completed;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://localhost:44386/sqlWS.asmx/ReadMasterData", RequestNamespace="https://localhost:44386/sqlWS.asmx/", ResponseNamespace="https://localhost:44386/sqlWS.asmx/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReadMasterData(string item) {
            object[] results = this.Invoke("ReadMasterData", new object[] {
                        item});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReadMasterDataAsync(string item) {
            this.ReadMasterDataAsync(item, null);
        }
        
        /// <remarks/>
        public void ReadMasterDataAsync(string item, object userState) {
            if ((this.ReadMasterDataOperationCompleted == null)) {
                this.ReadMasterDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadMasterDataOperationCompleted);
            }
            this.InvokeAsync("ReadMasterData", new object[] {
                        item}, this.ReadMasterDataOperationCompleted, userState);
        }
        
        private void OnReadMasterDataOperationCompleted(object arg) {
            if ((this.ReadMasterDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadMasterDataCompleted(this, new ReadMasterDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://localhost:44386/sqlWS.asmx/CreateMD", RequestNamespace="https://localhost:44386/sqlWS.asmx/", ResponseNamespace="https://localhost:44386/sqlWS.asmx/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateMD(string item, string machine, string process_code, int width, int height, int scrap, string updated_by) {
            object[] results = this.Invoke("CreateMD", new object[] {
                        item,
                        machine,
                        process_code,
                        width,
                        height,
                        scrap,
                        updated_by});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateMDAsync(string item, string machine, string process_code, int width, int height, int scrap, string updated_by) {
            this.CreateMDAsync(item, machine, process_code, width, height, scrap, updated_by, null);
        }
        
        /// <remarks/>
        public void CreateMDAsync(string item, string machine, string process_code, int width, int height, int scrap, string updated_by, object userState) {
            if ((this.CreateMDOperationCompleted == null)) {
                this.CreateMDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateMDOperationCompleted);
            }
            this.InvokeAsync("CreateMD", new object[] {
                        item,
                        machine,
                        process_code,
                        width,
                        height,
                        scrap,
                        updated_by}, this.CreateMDOperationCompleted, userState);
        }
        
        private void OnCreateMDOperationCompleted(object arg) {
            if ((this.CreateMDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateMDCompleted(this, new CreateMDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://localhost:44386/sqlWS.asmx/UpdateMD", RequestNamespace="https://localhost:44386/sqlWS.asmx/", ResponseNamespace="https://localhost:44386/sqlWS.asmx/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateMD(string item, string machine, string process_code, int width, int height, int scrap, string updated_by) {
            object[] results = this.Invoke("UpdateMD", new object[] {
                        item,
                        machine,
                        process_code,
                        width,
                        height,
                        scrap,
                        updated_by});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMDAsync(string item, string machine, string process_code, int width, int height, int scrap, string updated_by) {
            this.UpdateMDAsync(item, machine, process_code, width, height, scrap, updated_by, null);
        }
        
        /// <remarks/>
        public void UpdateMDAsync(string item, string machine, string process_code, int width, int height, int scrap, string updated_by, object userState) {
            if ((this.UpdateMDOperationCompleted == null)) {
                this.UpdateMDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMDOperationCompleted);
            }
            this.InvokeAsync("UpdateMD", new object[] {
                        item,
                        machine,
                        process_code,
                        width,
                        height,
                        scrap,
                        updated_by}, this.UpdateMDOperationCompleted, userState);
        }
        
        private void OnUpdateMDOperationCompleted(object arg) {
            if ((this.UpdateMDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMDCompleted(this, new UpdateMDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://localhost:44386/sqlWS.asmx/DeleteMD", RequestNamespace="https://localhost:44386/sqlWS.asmx/", ResponseNamespace="https://localhost:44386/sqlWS.asmx/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteMD(string item) {
            object[] results = this.Invoke("DeleteMD", new object[] {
                        item});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteMDAsync(string item) {
            this.DeleteMDAsync(item, null);
        }
        
        /// <remarks/>
        public void DeleteMDAsync(string item, object userState) {
            if ((this.DeleteMDOperationCompleted == null)) {
                this.DeleteMDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMDOperationCompleted);
            }
            this.InvokeAsync("DeleteMD", new object[] {
                        item}, this.DeleteMDOperationCompleted, userState);
        }
        
        private void OnDeleteMDOperationCompleted(object arg) {
            if ((this.DeleteMDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMDCompleted(this, new DeleteMDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://localhost:44386/sqlWS.asmx/ReaddUsers", RequestNamespace="https://localhost:44386/sqlWS.asmx/", ResponseNamespace="https://localhost:44386/sqlWS.asmx/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReaddUsers(string user_code) {
            object[] results = this.Invoke("ReaddUsers", new object[] {
                        user_code});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReaddUsersAsync(string user_code) {
            this.ReaddUsersAsync(user_code, null);
        }
        
        /// <remarks/>
        public void ReaddUsersAsync(string user_code, object userState) {
            if ((this.ReaddUsersOperationCompleted == null)) {
                this.ReaddUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReaddUsersOperationCompleted);
            }
            this.InvokeAsync("ReaddUsers", new object[] {
                        user_code}, this.ReaddUsersOperationCompleted, userState);
        }
        
        private void OnReaddUsersOperationCompleted(object arg) {
            if ((this.ReaddUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReaddUsersCompleted(this, new ReaddUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://localhost:44386/sqlWS.asmx/CreateUsers", RequestNamespace="https://localhost:44386/sqlWS.asmx/", ResponseNamespace="https://localhost:44386/sqlWS.asmx/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateUsers(string user_code, string full_name, string permission, string production_line, string updated_by) {
            object[] results = this.Invoke("CreateUsers", new object[] {
                        user_code,
                        full_name,
                        permission,
                        production_line,
                        updated_by});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateUsersAsync(string user_code, string full_name, string permission, string production_line, string updated_by) {
            this.CreateUsersAsync(user_code, full_name, permission, production_line, updated_by, null);
        }
        
        /// <remarks/>
        public void CreateUsersAsync(string user_code, string full_name, string permission, string production_line, string updated_by, object userState) {
            if ((this.CreateUsersOperationCompleted == null)) {
                this.CreateUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateUsersOperationCompleted);
            }
            this.InvokeAsync("CreateUsers", new object[] {
                        user_code,
                        full_name,
                        permission,
                        production_line,
                        updated_by}, this.CreateUsersOperationCompleted, userState);
        }
        
        private void OnCreateUsersOperationCompleted(object arg) {
            if ((this.CreateUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateUsersCompleted(this, new CreateUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://localhost:44386/sqlWS.asmx/UpdatedUser", RequestNamespace="https://localhost:44386/sqlWS.asmx/", ResponseNamespace="https://localhost:44386/sqlWS.asmx/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdatedUser(string user_code, string full_name, string permission, string production_line, string updated_by) {
            object[] results = this.Invoke("UpdatedUser", new object[] {
                        user_code,
                        full_name,
                        permission,
                        production_line,
                        updated_by});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatedUserAsync(string user_code, string full_name, string permission, string production_line, string updated_by) {
            this.UpdatedUserAsync(user_code, full_name, permission, production_line, updated_by, null);
        }
        
        /// <remarks/>
        public void UpdatedUserAsync(string user_code, string full_name, string permission, string production_line, string updated_by, object userState) {
            if ((this.UpdatedUserOperationCompleted == null)) {
                this.UpdatedUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatedUserOperationCompleted);
            }
            this.InvokeAsync("UpdatedUser", new object[] {
                        user_code,
                        full_name,
                        permission,
                        production_line,
                        updated_by}, this.UpdatedUserOperationCompleted, userState);
        }
        
        private void OnUpdatedUserOperationCompleted(object arg) {
            if ((this.UpdatedUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatedUserCompleted(this, new UpdatedUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://localhost:44386/sqlWS.asmx/DeleteUsers", RequestNamespace="https://localhost:44386/sqlWS.asmx/", ResponseNamespace="https://localhost:44386/sqlWS.asmx/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteUsers(string user_code) {
            object[] results = this.Invoke("DeleteUsers", new object[] {
                        user_code});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteUsersAsync(string user_code) {
            this.DeleteUsersAsync(user_code, null);
        }
        
        /// <remarks/>
        public void DeleteUsersAsync(string user_code, object userState) {
            if ((this.DeleteUsersOperationCompleted == null)) {
                this.DeleteUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUsersOperationCompleted);
            }
            this.InvokeAsync("DeleteUsers", new object[] {
                        user_code}, this.DeleteUsersOperationCompleted, userState);
        }
        
        private void OnDeleteUsersOperationCompleted(object arg) {
            if ((this.DeleteUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUsersCompleted(this, new DeleteUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://localhost:44386/sqlWS.asmx/ReadMaster_process", RequestNamespace="https://localhost:44386/sqlWS.asmx/", ResponseNamespace="https://localhost:44386/sqlWS.asmx/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReadMaster_process(string process_code) {
            object[] results = this.Invoke("ReadMaster_process", new object[] {
                        process_code});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReadMaster_processAsync(string process_code) {
            this.ReadMaster_processAsync(process_code, null);
        }
        
        /// <remarks/>
        public void ReadMaster_processAsync(string process_code, object userState) {
            if ((this.ReadMaster_processOperationCompleted == null)) {
                this.ReadMaster_processOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadMaster_processOperationCompleted);
            }
            this.InvokeAsync("ReadMaster_process", new object[] {
                        process_code}, this.ReadMaster_processOperationCompleted, userState);
        }
        
        private void OnReadMaster_processOperationCompleted(object arg) {
            if ((this.ReadMaster_processCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadMaster_processCompleted(this, new ReadMaster_processCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://localhost:44386/sqlWS.asmx/CreateMP", RequestNamespace="https://localhost:44386/sqlWS.asmx/", ResponseNamespace="https://localhost:44386/sqlWS.asmx/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateMP(string process_code, string process_name, string process_status) {
            object[] results = this.Invoke("CreateMP", new object[] {
                        process_code,
                        process_name,
                        process_status});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateMPAsync(string process_code, string process_name, string process_status) {
            this.CreateMPAsync(process_code, process_name, process_status, null);
        }
        
        /// <remarks/>
        public void CreateMPAsync(string process_code, string process_name, string process_status, object userState) {
            if ((this.CreateMPOperationCompleted == null)) {
                this.CreateMPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateMPOperationCompleted);
            }
            this.InvokeAsync("CreateMP", new object[] {
                        process_code,
                        process_name,
                        process_status}, this.CreateMPOperationCompleted, userState);
        }
        
        private void OnCreateMPOperationCompleted(object arg) {
            if ((this.CreateMPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateMPCompleted(this, new CreateMPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://localhost:44386/sqlWS.asmx/UpdateMP", RequestNamespace="https://localhost:44386/sqlWS.asmx/", ResponseNamespace="https://localhost:44386/sqlWS.asmx/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateMP(string process_code, string process_name, string process_status) {
            object[] results = this.Invoke("UpdateMP", new object[] {
                        process_code,
                        process_name,
                        process_status});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMPAsync(string process_code, string process_name, string process_status) {
            this.UpdateMPAsync(process_code, process_name, process_status, null);
        }
        
        /// <remarks/>
        public void UpdateMPAsync(string process_code, string process_name, string process_status, object userState) {
            if ((this.UpdateMPOperationCompleted == null)) {
                this.UpdateMPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMPOperationCompleted);
            }
            this.InvokeAsync("UpdateMP", new object[] {
                        process_code,
                        process_name,
                        process_status}, this.UpdateMPOperationCompleted, userState);
        }
        
        private void OnUpdateMPOperationCompleted(object arg) {
            if ((this.UpdateMPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMPCompleted(this, new UpdateMPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://localhost:44386/sqlWS.asmx/DeleteMP", RequestNamespace="https://localhost:44386/sqlWS.asmx/", ResponseNamespace="https://localhost:44386/sqlWS.asmx/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteMP(string process_code) {
            object[] results = this.Invoke("DeleteMP", new object[] {
                        process_code});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteMPAsync(string process_code) {
            this.DeleteMPAsync(process_code, null);
        }
        
        /// <remarks/>
        public void DeleteMPAsync(string process_code, object userState) {
            if ((this.DeleteMPOperationCompleted == null)) {
                this.DeleteMPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMPOperationCompleted);
            }
            this.InvokeAsync("DeleteMP", new object[] {
                        process_code}, this.DeleteMPOperationCompleted, userState);
        }
        
        private void OnDeleteMPOperationCompleted(object arg) {
            if ((this.DeleteMPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMPCompleted(this, new DeleteMPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://localhost:44386/sqlWS.asmx/ReadAccount", RequestNamespace="https://localhost:44386/sqlWS.asmx/", ResponseNamespace="https://localhost:44386/sqlWS.asmx/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReadAccount(string username) {
            object[] results = this.Invoke("ReadAccount", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReadAccountAsync(string username) {
            this.ReadAccountAsync(username, null);
        }
        
        /// <remarks/>
        public void ReadAccountAsync(string username, object userState) {
            if ((this.ReadAccountOperationCompleted == null)) {
                this.ReadAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadAccountOperationCompleted);
            }
            this.InvokeAsync("ReadAccount", new object[] {
                        username}, this.ReadAccountOperationCompleted, userState);
        }
        
        private void OnReadAccountOperationCompleted(object arg) {
            if ((this.ReadAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadAccountCompleted(this, new ReadAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://localhost:44386/sqlWS.asmx/CreateAccount", RequestNamespace="https://localhost:44386/sqlWS.asmx/", ResponseNamespace="https://localhost:44386/sqlWS.asmx/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateAccount(string username, string password, string user_code) {
            object[] results = this.Invoke("CreateAccount", new object[] {
                        username,
                        password,
                        user_code});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateAccountAsync(string username, string password, string user_code) {
            this.CreateAccountAsync(username, password, user_code, null);
        }
        
        /// <remarks/>
        public void CreateAccountAsync(string username, string password, string user_code, object userState) {
            if ((this.CreateAccountOperationCompleted == null)) {
                this.CreateAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateAccountOperationCompleted);
            }
            this.InvokeAsync("CreateAccount", new object[] {
                        username,
                        password,
                        user_code}, this.CreateAccountOperationCompleted, userState);
        }
        
        private void OnCreateAccountOperationCompleted(object arg) {
            if ((this.CreateAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateAccountCompleted(this, new CreateAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://localhost:44386/sqlWS.asmx/UpdateAccount", RequestNamespace="https://localhost:44386/sqlWS.asmx/", ResponseNamespace="https://localhost:44386/sqlWS.asmx/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateAccount(string username, string password, string user_code) {
            object[] results = this.Invoke("UpdateAccount", new object[] {
                        username,
                        password,
                        user_code});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAccountAsync(string username, string password, string user_code) {
            this.UpdateAccountAsync(username, password, user_code, null);
        }
        
        /// <remarks/>
        public void UpdateAccountAsync(string username, string password, string user_code, object userState) {
            if ((this.UpdateAccountOperationCompleted == null)) {
                this.UpdateAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAccountOperationCompleted);
            }
            this.InvokeAsync("UpdateAccount", new object[] {
                        username,
                        password,
                        user_code}, this.UpdateAccountOperationCompleted, userState);
        }
        
        private void OnUpdateAccountOperationCompleted(object arg) {
            if ((this.UpdateAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAccountCompleted(this, new UpdateAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://localhost:44386/sqlWS.asmx/DeleteAccount", RequestNamespace="https://localhost:44386/sqlWS.asmx/", ResponseNamespace="https://localhost:44386/sqlWS.asmx/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteAccount(string username) {
            object[] results = this.Invoke("DeleteAccount", new object[] {
                        username});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAccountAsync(string username) {
            this.DeleteAccountAsync(username, null);
        }
        
        /// <remarks/>
        public void DeleteAccountAsync(string username, object userState) {
            if ((this.DeleteAccountOperationCompleted == null)) {
                this.DeleteAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAccountOperationCompleted);
            }
            this.InvokeAsync("DeleteAccount", new object[] {
                        username}, this.DeleteAccountOperationCompleted, userState);
        }
        
        private void OnDeleteAccountOperationCompleted(object arg) {
            if ((this.DeleteAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAccountCompleted(this, new DeleteAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://localhost:44386/sqlWS.asmx/HelloWorld", RequestNamespace="https://localhost:44386/sqlWS.asmx/", ResponseNamespace="https://localhost:44386/sqlWS.asmx/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://localhost:44386/sqlWS.asmx/ImportExcelToSql", RequestNamespace="https://localhost:44386/sqlWS.asmx/", ResponseNamespace="https://localhost:44386/sqlWS.asmx/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ImportExcelToSql(string filePath) {
            this.Invoke("ImportExcelToSql", new object[] {
                        filePath});
        }
        
        /// <remarks/>
        public void ImportExcelToSqlAsync(string filePath) {
            this.ImportExcelToSqlAsync(filePath, null);
        }
        
        /// <remarks/>
        public void ImportExcelToSqlAsync(string filePath, object userState) {
            if ((this.ImportExcelToSqlOperationCompleted == null)) {
                this.ImportExcelToSqlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportExcelToSqlOperationCompleted);
            }
            this.InvokeAsync("ImportExcelToSql", new object[] {
                        filePath}, this.ImportExcelToSqlOperationCompleted, userState);
        }
        
        private void OnImportExcelToSqlOperationCompleted(object arg) {
            if ((this.ImportExcelToSqlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportExcelToSqlCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://localhost:44386/sqlWS.asmx/ExportSqlToExcel", RequestNamespace="https://localhost:44386/sqlWS.asmx/", ResponseNamespace="https://localhost:44386/sqlWS.asmx/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ExportSqlToExcel(string filePath) {
            this.Invoke("ExportSqlToExcel", new object[] {
                        filePath});
        }
        
        /// <remarks/>
        public void ExportSqlToExcelAsync(string filePath) {
            this.ExportSqlToExcelAsync(filePath, null);
        }
        
        /// <remarks/>
        public void ExportSqlToExcelAsync(string filePath, object userState) {
            if ((this.ExportSqlToExcelOperationCompleted == null)) {
                this.ExportSqlToExcelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportSqlToExcelOperationCompleted);
            }
            this.InvokeAsync("ExportSqlToExcel", new object[] {
                        filePath}, this.ExportSqlToExcelOperationCompleted, userState);
        }
        
        private void OnExportSqlToExcelOperationCompleted(object arg) {
            if ((this.ExportSqlToExcelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportSqlToExcelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://localhost:44386/sqlWS.asmx/project3", RequestNamespace="https://localhost:44386/sqlWS.asmx/", ResponseNamespace="https://localhost:44386/sqlWS.asmx/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string project3() {
            object[] results = this.Invoke("project3", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void project3Async() {
            this.project3Async(null);
        }
        
        /// <remarks/>
        public void project3Async(object userState) {
            if ((this.project3OperationCompleted == null)) {
                this.project3OperationCompleted = new System.Threading.SendOrPostCallback(this.Onproject3OperationCompleted);
            }
            this.InvokeAsync("project3", new object[0], this.project3OperationCompleted, userState);
        }
        
        private void Onproject3OperationCompleted(object arg) {
            if ((this.project3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.project3Completed(this, new project3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ReadMasterDataCompletedEventHandler(object sender, ReadMasterDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadMasterDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadMasterDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateMDCompletedEventHandler(object sender, CreateMDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateMDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateMDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateMDCompletedEventHandler(object sender, UpdateMDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteMDCompletedEventHandler(object sender, DeleteMDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteMDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteMDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ReaddUsersCompletedEventHandler(object sender, ReaddUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReaddUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReaddUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateUsersCompletedEventHandler(object sender, CreateUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdatedUserCompletedEventHandler(object sender, UpdatedUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatedUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatedUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteUsersCompletedEventHandler(object sender, DeleteUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ReadMaster_processCompletedEventHandler(object sender, ReadMaster_processCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadMaster_processCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadMaster_processCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateMPCompletedEventHandler(object sender, CreateMPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateMPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateMPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateMPCompletedEventHandler(object sender, UpdateMPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteMPCompletedEventHandler(object sender, DeleteMPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteMPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteMPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ReadAccountCompletedEventHandler(object sender, ReadAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateAccountCompletedEventHandler(object sender, CreateAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateAccountCompletedEventHandler(object sender, UpdateAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteAccountCompletedEventHandler(object sender, DeleteAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ImportExcelToSqlCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ExportSqlToExcelCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void project3CompletedEventHandler(object sender, project3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class project3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal project3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591